<?xml version="1.0" encoding="UTF-8"?>
<web-app xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns="http://java.sun.com/xml/ns/javaee" xmlns:web="http://java.sun.com/xml/ns/javaee/web-app_2_5.xsd"
	xsi:schemaLocation="http://java.sun.com/xml/ns/javaee http://java.sun.com/xml/ns/javaee/web-app_2_5.xsd"
	id="WebAPP_Order" version="2.5">
	<display-name>piaotts</display-name>

	<!--&lt;!&ndash;###########注意, 此段listener和filter直接放置在web.xml顶端########&ndash;&gt;-->
	<!--&lt;!&ndash;###########连这段注释一起放, 避免其他同学copy时忽略此信息#########&ndash;&gt;-->
	<!--<listener>-->
		<!--<listener-class>qunar.ServletWatcher</listener-class>-->
	<!--</listener>-->

	<!-- ========================================== -->
	<!-- 字符集过滤器，对request和response中的字符编码 -->
	<!-- 因为 ServletWatcher 里边调用了 getParameter,请将瞎编的filter放置在 ServletWatcher 之前-->
	<!-- ========================================== -->
	<filter>
		<description>字符集过滤器</description>
		<filter-name>characterEncodingFilter</filter-name>
		<filter-class>org.springframework.web.filter.CharacterEncodingFilter</filter-class>
		<init-param>
			<description>字符集编码</description>
			<param-name>encoding</param-name>
			<param-value>UTF-8</param-value>
		</init-param>
		<init-param>
			<param-name>forceEncoding</param-name>
			<param-value>true</param-value>
		</init-param>
	</filter>
	<filter-mapping>
		<filter-name>characterEncodingFilter</filter-name>
		<url-pattern>/*</url-pattern>
	</filter-mapping>

	<!--<filter>-->
		<!--<filter-name>watcher</filter-name>-->
		<!--<filter-class>qunar.ServletWatcher</filter-class>-->
	<!--</filter>-->

	<!--<filter-mapping>-->
		<!--<filter-name>watcher</filter-name>-->
		<!--<url-pattern>/*</url-pattern>-->
	<!--</filter-mapping>-->
	<!--############注意, 此段listener和filter直接放置在web.xml顶端########-->

	<!--<listener>-->
		<!--<listener-class>org.apache.shiro.web.env.EnvironmentLoaderListener</listener-class>-->
	<!--</listener>-->

	<!--<context-param>-->
		<!--<param-name>shiroEnvironmentClass</param-name>-->
		<!--<param-value>com.qunar.piao.pms.client.shiro.env.PmsWebEnvironment</param-value>-->
	<!--</context-param>-->



	<!-- ================================================================================== -->
	<!-- RESTFUL风格，拦截request，并且将hidden field中的real method设置到当前request的header中 -->
	<!-- ================================================================================== -->
	<filter>
		<description>提供REST转换Http Method过滤器</description>
		<filter-name>HiddenHttpMethodFilter</filter-name>
		<filter-class>org.springframework.web.filter.HiddenHttpMethodFilter</filter-class>
	</filter>
	<filter-mapping>
		<filter-name>HiddenHttpMethodFilter</filter-name>
		<servlet-name>springmvc</servlet-name>
	</filter-mapping>
	<!---->
    <!--<filter>-->
        <!--<filter-name>ShiroFilter</filter-name>-->
        <!--<filter-class>com.qunar.piao.pms.client.shiro.authc.filter.PmsShiroFilter</filter-class>-->
        <!--<init-param>-->
            <!--<param-name>excludedPages</param-name>-->
            <!--<param-value>/healthcheck.html,/resource/**,/_/metrics/plain,/_/jarinfo</param-value>-->
        <!--</init-param>-->
    <!--</filter>-->
    <!--<filter-mapping>-->
        <!--<filter-name>ShiroFilter</filter-name>-->
        <!--<url-pattern>/*</url-pattern>-->
    <!--</filter-mapping>-->

	<!-- ========================================================= -->
	<!-- 在启动Web容器时，自动装配Spring applicationContext.xml的配置 -->
	<!-- ========================================================= -->
	<listener>
		<description>spring监听器</description>
		<listener-class>org.springframework.web.context.ContextLoaderListener</listener-class>
	</listener>
	<context-param>
		<param-name>contextConfigLocation</param-name>
		<param-value>classpath*:/mvc/applicationContext.xml</param-value>
	</context-param>


	<!-- ====================== -->
	<!-- 加载velocity配置 -->
	<!-- ====================== -->
	<servlet>
		<servlet-name>springmvc</servlet-name>
		<servlet-class>org.springframework.web.servlet.DispatcherServlet</servlet-class>
		<init-param>
			<description>spring mvc 配置文件</description>
			<param-name>contextConfigLocation</param-name>
			<param-value>classpath*:/mvc/spring-mvc.xml</param-value>
		</init-param>
		<load-on-startup>1</load-on-startup>
	</servlet>
	<servlet-mapping>
		<!-- 过滤所有路径(spring 3.0 REST 风格支持) -->
		<servlet-name>springmvc</servlet-name>
		<url-pattern>/</url-pattern>
	</servlet-mapping>

	<!-- ====================================================================== -->
	<!-- 静态资源不进行过滤 (REST 风格过滤了所有路径,所以需要把静态资源做为不进行过滤配置) -->
	<!-- ====================================================================== -->
	<servlet-mapping>
		<servlet-name>default</servlet-name>
		<url-pattern>*.html</url-pattern>
	</servlet-mapping>

	<servlet-mapping>
		<servlet-name>default</servlet-name>
		<url-pattern>*.htm</url-pattern>
	</servlet-mapping>

	<servlet-mapping>
		<servlet-name>default</servlet-name>
		<url-pattern>*.ico</url-pattern>
	</servlet-mapping>

	<servlet-mapping>
		<servlet-name>default</servlet-name>
		<url-pattern>*.swf</url-pattern>
	</servlet-mapping>

	<servlet-mapping>
		<servlet-name>default</servlet-name>
		<url-pattern>*.css</url-pattern>
	</servlet-mapping>

	<servlet-mapping>
		<servlet-name>default</servlet-name>
		<url-pattern>*.gif</url-pattern>
	</servlet-mapping>

	<servlet-mapping>
		<servlet-name>default</servlet-name>
		<url-pattern>*.jpg</url-pattern>
	</servlet-mapping>

	<servlet-mapping>
		<servlet-name>default</servlet-name>
		<url-pattern>*.js</url-pattern>
	</servlet-mapping>
    
	<!-- ========================== -->
	<!-- ico、错误页面配置 -->
	<!-- ========================== -->
	<mime-mapping>
		<extension>ico</extension>
		<mime-type>image/x-icon</mime-type>
	</mime-mapping>

	<error-page>
		<error-code>404</error-code>
		<location>/notfound</location>
	</error-page>

	<error-page>
		<error-code>500</error-code>
		<location>/error</location>
	</error-page>

    <welcome-file-list>
        <welcome-file>/home</welcome-file>
    </welcome-file-list>
</web-app>
